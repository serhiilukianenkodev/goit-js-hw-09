{"mappings":"YAAA,IAiBuBA,EAAUC,EAhBzBC,SAASC,cAAc,SACjBD,SAASC,cAAc,uBACxBD,SAASC,cAAc,sBACrBD,SAASC,cAAc,yBAafH,EART,EAQmBC,EARhB,KASR,IAAIG,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,GAAgBF,EAAQ,CAACL,WAAUC,UAEvCK,EAAO,CAACN,WAAUC,S,GACjBA,E,KAdJU,MAAK,SAAAC,G,IAAGZ,EAAQY,EAARZ,SAAUC,EAAKW,EAALX,MACjBY,QAAQC,IAAI,uBAAwCC,OAAff,EAAS,QAAYe,OAANd,EAAM,M,IAE3De,OAAM,SAAAJ,G,IAAGZ,EAAQY,EAARZ,SAAUC,EAAKW,EAALX,MAClBY,QAAQC,IAAI,sBAAqCC,OAAff,EAAS,QAAYe,OAANd,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["const refs = {\n  form: document.querySelector('.form'),\n  fieldDelay: document.querySelector('input[name=\"delay\"]'),\n  fieldStep: document.querySelector('input[name=\"step\"]'),\n  fieldAmount: document.querySelector('input[name=\"amount\"]'),\n}\n\n// console.log(refs.fieldAmount);\n\ncreatePromise(2, 1500)\n  .then(({ position, delay }) => {\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(()=> {\n      if (shouldResolve) {resolve({position, delay})} \n\n      reject({position, delay})\n    }, delay)\n    \n   \n\n  })\n}\n"],"names":["position","delay","document","querySelector","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","then","param","console","log","concat","catch"],"version":3,"file":"03-promises.4e29a9bb.js.map"}