{"mappings":"AACQA,SAASC,cAAc,SACjBD,SAASC,cAAc,uBACxBD,SAASC,cAAc,sBACrBD,SAASC,cAAc,wBAatC,IAAuBC,EAAUC,GAAVD,EART,EAQmBC,EARhB,KASR,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,GAAgBF,EAAQ,C,SAACH,E,MAAUC,IAEvCG,EAAO,C,SAACJ,E,MAAUC,GAAO,GACxBA,EAAM,KAdVQ,MAAK,EAACT,SAAEA,EAAQC,MAAEA,MACjBS,QAAQC,IAAI,uBAAqBX,QAAiBC,MAAU,IAE7DW,OAAM,EAACZ,SAAEA,EAAQC,MAAEA,MAClBS,QAAQC,IAAI,sBAAoBX,QAAeC,MAAU","sources":["src/js/03-promises.js"],"sourcesContent":["const refs = {\n  form: document.querySelector('.form'),\n  fieldDelay: document.querySelector('input[name=\"delay\"]'),\n  fieldStep: document.querySelector('input[name=\"step\"]'),\n  fieldAmount: document.querySelector('input[name=\"amount\"]'),\n}\n\n// console.log(refs.fieldAmount);\n\ncreatePromise(2, 1500)\n  .then(({ position, delay }) => {\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(()=> {\n      if (shouldResolve) {resolve({position, delay})} \n\n      reject({position, delay})\n    }, delay)\n    \n   \n\n  })\n}\n"],"names":["document","querySelector","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","then","console","log","catch"],"version":3,"file":"03-promises.e6b881c0.js.map"}