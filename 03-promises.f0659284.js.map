{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,WAAYF,SAASC,cAAc,uBACnCE,UAAWH,SAASC,cAAc,sBAClCG,YAAaJ,SAASC,cAAc,yBAYtC,SAASI,EAAcC,EAAMC,EAAQC,GACnC,I,kBACEC,YAAW,WAuBf,IAAuBC,EAAUC,GAAVD,EAtBHE,EAsBaD,EAtBVL,EAAKM,EAuBnB,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCT,YAAW,WACLO,GAAgBF,EAAQ,CAACJ,WAAUC,UAEvCI,EAAO,CAACL,WAAUC,S,GACjBA,E,KA5BEQ,MAAK,SAAAC,G,IAAGV,EAAQU,EAARV,SAAUC,EAAKS,EAALT,MACjBf,EAAAyB,OAAOC,QAAQ,uBAA4CC,OAAnBb,EAAW,EAAE,QAAoBa,OAAdZ,EAAQH,EAAM,M,IAE1EgB,OAAM,SAAAJ,G,IAAGV,EAAQU,EAARV,SAAUC,EAAKS,EAALT,MAChBf,EAAAyB,OAAOI,QAAQ,sBAAyCF,OAAnBb,EAAW,EAAE,QAAoBa,OAAdZ,EAAQH,EAAM,M,MAG3EF,E,EAVGoB,EAAI,EAAGA,EAAInB,EAAQmB,GAAG,EAACC,EAAAD,E,CAVjC5B,EAAKC,KAAK6B,iBAAiB,UAE3B,SAAsBC,GACpBA,EAAIC,iBACJ,IAA8BC,EAqBf,CACbpB,MAAOqB,OAAOlC,EAAKI,WAAW+B,OAC9B3B,KAAM0B,OAAOlC,EAAKK,UAAU8B,OAC5B1B,OAAQyB,OAAOlC,EAAKM,YAAY6B,QAxB3BtB,EAAuBoB,EAAvBpB,MAAOL,EAAgByB,EAAhBzB,KAAMC,EAAUwB,EAAVxB,OAEpBE,WAAWJ,EAAeM,EAAOL,EAAMC,EAAQI,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  fieldDelay: document.querySelector('input[name=\"delay\"]'),\n  fieldStep: document.querySelector('input[name=\"step\"]'),\n  fieldAmount: document.querySelector('input[name=\"amount\"]'),\n}\n\nrefs.form.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(evt){\n  evt.preventDefault()\n  const {delay, step, amount} = getFormValues()\n\n  setTimeout(startPromises, delay, step, amount, delay)\n}\n\nfunction startPromises(step, amount, start){\n  for(let i = 0; i < amount; i+=1){\n    setTimeout(()=>{\n      createPromise(i, step*i)\n        .then(({ position, delay }) => {\n          Notify.success(`✅ Fulfilled promise ${position + 1} in ${delay + start}ms`);\n          })\n        .catch(({ position, delay }) => {\n            Notify.failure(`❌ Rejected promise ${position + 1} in ${delay + start}ms`);\n          })\n        \n    }, step)\n  }\n}\n\nfunction getFormValues() {\n  const values = {\n    delay: Number(refs.fieldDelay.value),\n    step: Number(refs.fieldStep.value),\n    amount: Number(refs.fieldAmount.value),\n  }\n\n  return values;  \n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(()=> {\n      if (shouldResolve) {resolve({position, delay})} \n\n      reject({position, delay})\n    }, delay)\n  })\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","fieldDelay","fieldStep","fieldAmount","$ce04d3a99e08e73b$var$startPromises","step","amount","start","setTimeout","position","delay","i","Promise","resolve","reject","shouldResolve","Math","random","then","param","Notify","success","concat","catch","failure","i1","_loop","addEventListener","evt","preventDefault","ref","Number","value"],"version":3,"file":"03-promises.f0659284.js.map"}